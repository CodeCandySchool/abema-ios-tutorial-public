///
/// @Generated by Mockolo
///

#if DEBUG

import RxSwift


public class RepositoryListUseCaseTypeMock: RepositoryListUseCaseType {
    public init() { }

    public typealias UseCaseModel = RepositoryListUseCaseModel

    public private(set) var showRepositoryListCallCount = 0
    public var showRepositoryListHandler: (() -> (Single<[UseCaseModel.Repository]>))?
    public func showRepositoryList() -> Single<[UseCaseModel.Repository]> {
        showRepositoryListCallCount += 1
        if let showRepositoryListHandler = showRepositoryListHandler {
            return showRepositoryListHandler()
        }
        fatalError("showRepositoryListHandler returns can't have a default value thus its handler must be set")
    }

    public private(set) var reloadRepositoryListCallCount = 0
    public var reloadRepositoryListHandler: (() -> (Single<[UseCaseModel.Repository]>))?
    public func reloadRepositoryList() -> Single<[UseCaseModel.Repository]> {
        reloadRepositoryListCallCount += 1
        if let reloadRepositoryListHandler = reloadRepositoryListHandler {
            return reloadRepositoryListHandler()
        }
        fatalError("reloadRepositoryListHandler returns can't have a default value thus its handler must be set")
    }
}

#endif